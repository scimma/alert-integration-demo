apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-source-data-publisher
spec:
  backoffLimit: 2
  template:
    spec:
      restartPolicy: "OnFailure"
      volumes:
      - name: copy-hop-auth
        configMap:
          name: {{ .Release.Name }}-copy-hop-auth
      - name: hop-auth
        secret:
          ## Use the mariadb existingSecret spec to avoid redundant specs
          secretName: {{ .Values.mariadb.auth.existingSecret | quote }}
      - name: hop-config
        emptyDir: {}
      initContainers:
      ## Wait for database to be ready to ensure that the source data
      ## ingest script will be ready to receive alerts
      - name: check-db-ready
        image: busybox:1.31
        command: 
        - 'sh'
        - '-c'
        - 'echo -e "Checking for the availability of MariaDB Server deployment"; while ! nc -z {{ .Values.mariadb.fullnameOverride }} 3306; do sleep 1; printf "-"; done; echo -e "  >> MariaDB DB Server has started";'
      ## The hop auth.toml file must be chmod to 0600
      - image: ubuntu:20.04
        name: init-hop-auth
        command:
        - /bin/bash
        - -c
        - bash /tmp/copy_auth.sh
        volumeMounts:
        - name: hop-config
          mountPath: /home/{{ .Values.securityContext.username }}/.config/hop
          readOnly: false
        - name: hop-auth
          mountPath: /tmp/auth.toml
          subPath: "auth.toml"
          readOnly: true
        - name: copy-hop-auth
          mountPath: /tmp/copy_auth.sh
          subPath: "copy_auth.sh"
          readOnly: true
      containers:
      ## The source data publisher parses a set of demo data and publishes messages to a
      ## hopskotch topic, simulating an MMA alert source
      - name: source-data-publisher
        image: {{ .Values.classifier.image.repository }}:{{ .Values.classifier.image.tag }}
        imagePullPolicy: {{ .Values.classifier.image.imagePullPolicy }}
        command:
        - '/bin/bash'
        - '-c'
        - '{{ .Values.sourceDataPublisher.command }}'
        volumeMounts:
        - name: hop-config
          mountPath: /home/{{ .Values.securityContext.username }}/.config/hop
          readOnly: false
